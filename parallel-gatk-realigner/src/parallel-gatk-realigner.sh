#!/bin/bash
# parallel-gatk-realigner 0.0.1
# Generated by dx-app-wizard.
#
# Basic execution pattern: Your app will run on a single machine from
# beginning to end.
#
# Your job's input variables (if any) will be loaded as environment
# variables before this script runs.  Any array inputs will be loaded
# as bash arrays.
#
# Any code outside of main() (or any entry point you may add) is
# ALWAYS executed, followed by running the entry point itself.
#
# See https://wiki.dnanexus.com/Developer-Portal for tutorials on how
# to modify this file.

main() {

    mkdir -p /input/scripts/
    mkdir -p /input/Sorted_Bam
    mkdir -p /input/FASTA_Genome
    mkdir -p /out/Realigned_Bam

    #download the sorted bam
    for i in ${!Sorted_Bam[@]}
    do
        echo "Downloading sorted BAM file '${Sorted_Bam_name[$i]}'"
        dx download "${Sorted_Bam[$i]}" -o /input/Sorted_Bam/${Sorted_Bam_name[$i]}
    done
    set -x
    #download the gzipped genome
    echo "Downloading genome file '${Genome_name}'"
    dx download "${Genome}" -o /input/FASTA_Genome/${Genome_name}
    #unzip
    (cd /input/FASTA_Genome; gunzip ${Genome_name})

    # get GATK 4 (until it is officially released)
    wget -O /input/gatk-package-4.beta.1-local.jar https://www.dropbox.com/s/oko590zxebhlqmg/gatk-package-4.beta.1-local.jar
    dx-docker pull artifacts/variationanalysis-app:latest

    genome_basename=`basename /input/FASTA_Genome/*.fasta`
    bam_basename=`basename /input/Sorted_Bam/*.bam | cut -d. -f1`

    cat >/input/scripts/realign.sh <<EOL
    #!/bin/bash
    cd /out/Realigned_Bam
    export GATK_LAUNCH=/input/gatk-package-4.beta.1-local.jar
    export MEMORY_PER_THREAD=6g
    export NUM_THREADS=`grep physical  /proc/cpuinfo |grep id|wc -l`
    export FASTA_GENOME=/input/FASTA_Genome/${genome_basename}
    export BAM_INPUT=/input/Sorted_Bam/${bam_basename}.bam
    export BAM_OUTPUT=/out/Realigned_Bam/${bam_basename}-realigned.bam
    export GATK_ARGS="${GATK_Arguments}"
    parallel-gatk-realign-filtered.sh ${GATK_LAUNCH} ${MEMORY_PER_THREAD} ${NUM_THREADS} ${FASTA_GENOME} ${BAM_INPUT} ${BAM_OUTPUT} "${GATK_ARGS}"
EOL
    chmod u+x /input/scripts/realign.sh
    cat /input/scripts/realign.sh

    #usage: parallel-gatk-realign-filtered.sh PATH_TO_GATK_LAUNCH 10g NUM_THREADS GENOME_FA BAM_INPUT BAM_OUTPUT [GATK_ARGS]
    dx-docker run \
        -v /input/:/input \
        -v /out/:/out \
        artifacts/variationanalysis-app:latest \
        bash -c "source ~/.bashrc; source /input/scripts/realign.sh"
        
    # The following line(s) use the dx command-line tool to upload your file
    # outputs after you have created them on the local file system.  It assumes
    # that you have used the output field name for the filename for each output,
    # but you can change that behavior to suit your needs.  Run "dx upload -h"
    # to see more options to set metadata.

    #realigned_bam=$(dx upload realigned_bam --brief)

    # The following line(s) use the utility dx-jobutil-add-output to format and
    # add output variables to your job's output as appropriate for the output
    # class.  Run "dx-jobutil-add-output -h" for more information on what it
    # does.

    #dx-jobutil-add-output realigned_bam "$realigned_bam" --class=file

    mkdir -p $HOME/out/Realigned_Bam
    mv /out/Realigned_Bam/*-realigned.bam $HOME/out/Realigned_Bam/
    mv /out/Realigned_Bam/*-realigned.bam.bai $HOME/out/Realigned_Bam/
    ls -lrt $HOME/out/Realigned_Bam/
    dx-upload-all-outputs

}
