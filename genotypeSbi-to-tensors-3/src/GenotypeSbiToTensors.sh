#!/bin/bash
# GenotypeSbiToTensors 0.0.1
# Generated by dx-app-wizard.
#
# Basic execution pattern: Your app will run on a single machine from
# beginning to end.
#
# Your job's input variables (if any) will be loaded as environment
# variables before this script runs.  Any array inputs will be loaded
# as bash arrays.
#
# Any code outside of main() (or any entry point you may add) is
# ALWAYS executed, followed by running the entry point itself.
#
# See https://wiki.dnanexus.com/Developer-Portal for tutorials on how
# to modify this file.

main() {

    echo "Value of SBI: '${GenotypeSBI[@]}'"
    echo "Value of FeatureMapper: '$FeatureMapper'"
    echo "Value of SampleName: '$SampleName'"
    echo "Value of LabelSmoothingEpsilon: '$LabelSmoothingEpsilon'"
    echo "Value of Ploidy: '$Ploidy'"
    echo "Value of GenomicContextLength: '$GenomicContextLength'"
    echo "Value of IndelSequenceLength: '$IndelSequenceLength'"

    #download inputs in $HOME/in
    dx-download-all-inputs --parallel

    echo "Downloading the docker image..."
    dx-docker pull artifacts/variationanalysis-app:${Image_Version} &>/dev/null

    set -x
    ls -ltrR  ${HOME}/in
    mkdir -p ${HOME}/in/SBI
    mkdir -p ${HOME}/out/Tensors
    mkdir -p $HOME/out/VEC
    find ${HOME}/in/GenotypeSBI -name \*.sbi\* |xargs -I {} mv {} ${HOME}/in/SBI/
    ls -ltrR  ${HOME}/in

    for file in ${HOME}/in/SBI/*.sbi; do
        SBI_basename=`basename ${HOME}/in/SBI/$file .sbi`
        echo "SBI basename: '$SBI_basename'"
        if [ ! -f ${HOME}/in/SBI/${SBI_basename}.sbip ]; then
          echo "${SBI_basename}.sbip not found!"
        fi


        dx-docker run \
            -v ${HOME}/in:${HOME}/in \
            -v ${HOME}/out/:${HOME}/out/ \
            artifacts/variationanalysis-app:${Image_Version} \
            bash -c "source ~/.bashrc; cd $HOME/out/VEC; export-genotype-tensors.sh 2g --indel-sequence-length ${IndelSequenceLength} --feature-mapper ${FeatureMapper} -i \"/${HOME}/in/SBI/${SBI_basename}.sbi\" -o /${HOME}/out/${SBI_basename} --label-smoothing-epsilon ${LabelSmoothingEpsilon} --ploidy ${Ploidy} --genomic-context-length ${GenomicContextLength} --export-input input --export-output softmaxGenotype --sample-name \"${SampleName}\"  --sample-type germline"

        mv ${HOME}/out/${SBI_basename}*.vec*  ${HOME}/out/Tensors
        
        if [ ! -e ${HOME}/out/domain.properties ]; then
            mv ${HOME}/out/domain.properties  ${HOME}/out/Tensors
        fi
        if [ ! -e ${HOME}/out/config.properties ]; then
            mv ${HOME}/out/config.properties  ${HOME}/out/Tensors
        fi
    done

    dx-upload-all-outputs --parallel

}
